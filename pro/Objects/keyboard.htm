<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\keyboard.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\keyboard.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu May 30 18:22:44 2019
<BR><P>
<H3>Maximum Stack Usage =        424 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SystemPoll &rArr; DemoPoll &rArr; demoTcpServerPoll &rArr; MSocketCreate &rArr; M8266WIFI_SPI_Setup_Connection &rArr; M8266WIFI_SPI_Delete_Connection &rArr; M8266WIFI_SPI_dlodc &rArr; M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[59]">CRYP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[58]">DCMI_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[47]">ETH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[48]">ETH_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from ps2.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5b]">FPU_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5a]">HASH_RNG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4d]">OTG_FS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[54]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[57]">OTG_HS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[56]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5d]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM10_IRQHandler</a> from haltimer.o(i.TIM1_UP_TIM10_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from haluart.o(i.USART1_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from haluart.o(i.USART2_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[51]">USART6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[60]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[61]">demoTcpDataRecvHandle</a> from demo.o(i.demoTcpDataRecvHandle) referenced from demo.o(i.demoTcpServerPoll)
 <LI><a href="#[62]">demoUdpDataRecvHandle</a> from demo.o(i.demoUdpDataRecvHandle) referenced from demo.o(i.demoTcpServerPoll)
 <LI><a href="#[5f]">fputc</a> from hal.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[5c]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[63]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[100]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[101]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[102]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[103]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[104]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketInit
</UL>

<P><STRONG><a name="[105]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_STA_Get_HostIP_by_HostName
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_qacal
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_capstp
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap_Old
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_Module_Info
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_IP_Addr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_Connection_Status
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Query_Connection
</UL>

<P><STRONG><a name="[107]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[f4]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoUdpDataRecvHandle
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[64]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[108]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[109]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[10a]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DemoInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, demo.o(i.DemoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = DemoInit &rArr; WifiJoinAp &rArr; M8266WIFI_SPI_STA_Connect_Ap &rArr; M8266WIFI_SPI_STA_Connect_Ap_Old &rArr; M8266WIFI_SPI_Get_STA_Connection_Status &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiJoinAp
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitialize
</UL>

<P><STRONG><a name="[6e]"></a>DemoPoll</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, demo.o(i.DemoPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = DemoPoll &rArr; demoTcpServerPoll &rArr; MSocketCreate &rArr; M8266WIFI_SPI_Setup_Connection &rArr; M8266WIFI_SPI_Delete_Connection &rArr; M8266WIFI_SPI_dlodc &rArr; M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoWifiStatusPoll
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoTcpServerPoll
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPoll
</UL>

<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ps2.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI15_10_IRQHandler &rArr; ps2BitRecv &rArr; check
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps2BitRecv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halExtiInit
</UL>

<P><STRONG><a name="[f8]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halExtiInit
</UL>

<P><STRONG><a name="[77]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOConfig
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartInitialize
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_GPIO_CS_RESET_Init
</UL>

<P><STRONG><a name="[8c]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartInitialize
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Init
</UL>

<P><STRONG><a name="[71]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>HalGPIOConfig</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, halgpio.o(i.HalGPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HalGPIOConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ioToPort
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ioToPin
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2Init
</UL>

<P><STRONG><a name="[7a]"></a>HalGPIOInitialize</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, halgpio.o(i.HalGPIOInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInit
</UL>

<P><STRONG><a name="[78]"></a>HalInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal.o(i.HalInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = HalInit &rArr; logPrintInit &rArr; HalUartConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartInitialize
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOInitialize
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logPrintInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halClkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitialize
</UL>

<P><STRONG><a name="[e5]"></a>HalPoll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i.HalPoll))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPoll
</UL>

<P><STRONG><a name="[7e]"></a>HalReboot</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hal.o(i.HalReboot))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HalReboot &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitialize
</UL>

<P><STRONG><a name="[f3]"></a>HalTimerCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(i.HalTimerCount))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoWifiStatusPoll
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoTcpServerPoll
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps2BitRecv
</UL>

<P><STRONG><a name="[7c]"></a>HalTimerInitialize</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, haltimer.o(i.HalTimerInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HalTimerInitialize &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInit
</UL>

<P><STRONG><a name="[e8]"></a>HalTimerPast1ms</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i.HalTimerPast1ms))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM10_IRQHandler
</UL>

<P><STRONG><a name="[86]"></a>HalUartConfig</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, haluart.o(i.HalUartConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HalUartConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logPrintInit
</UL>

<P><STRONG><a name="[7b]"></a>HalUartInitialize</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, haluart.o(i.HalUartInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HalUartInitialize &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInit
</UL>

<P><STRONG><a name="[8d]"></a>HalUartWrite</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, haluart.o(i.HalUartWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[90]"></a>HalWaitUs</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, halwait.o(i.HalWaitUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>M8266HostIf_GPIO_CS_RESET_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, m8266hostif_stm32xx.o(i.M8266HostIf_GPIO_CS_RESET_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = M8266HostIf_GPIO_CS_RESET_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Init
</UL>

<P><STRONG><a name="[94]"></a>M8266HostIf_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, m8266hostif_stm32xx.o(i.M8266HostIf_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = M8266HostIf_Init &rArr; M8266HostIf_SPI_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_GPIO_CS_RESET_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
</UL>

<P><STRONG><a name="[cd]"></a>M8266HostIf_SPI_DMA_StartReceiveSendData</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, m8266wifidrv.o(i.M8266HostIf_SPI_DMA_StartReceiveSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = M8266HostIf_SPI_DMA_StartReceiveSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssud
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rrud
</UL>

<P><STRONG><a name="[95]"></a>M8266HostIf_SPI_Init</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, m8266hostif_stm32xx.o(i.M8266HostIf_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = M8266HostIf_SPI_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Init
</UL>

<P><STRONG><a name="[9a]"></a>M8266HostIf_SPI_Select</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, m8266wifidrv.o(i.M8266HostIf_SPI_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = M8266HostIf_SPI_Select &rArr; M8266WIFI_SPI_ssmd &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvcp
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssmd
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_Module_Info
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_Init_Via_SPI
</UL>

<P><STRONG><a name="[9f]"></a>M8266HostIf_SPI_SetSpeed</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, m8266hostif_stm32xx.o(i.M8266HostIf_SPI_SetSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = M8266HostIf_SPI_SetSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_Init_Via_SPI
</UL>

<P><STRONG><a name="[cb]"></a>M8266HostIf_SPI_rrs</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, m8266wifidrv.o(i.M8266HostIf_SPI_rrs))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssut
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssu
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rru
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rra
</UL>

<P><STRONG><a name="[cc]"></a>M8266HostIf_SPI_wrs</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, m8266wifidrv.o(i.M8266HostIf_SPI_wrs))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rru
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rra
</UL>

<P><STRONG><a name="[a1]"></a>M8266HostIf_Set_SPI_nCS_Pin</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, m8266hostif_stm32xx.o(i.M8266HostIf_Set_SPI_nCS_Pin))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssut
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssud
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssu
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rrud
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rru
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rra
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_Hardware_Reset
</UL>

<P><STRONG><a name="[a3]"></a>M8266HostIf_Set_nRESET_Pin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, m8266hostif_stm32xx.o(i.M8266HostIf_Set_nRESET_Pin))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_Hardware_Reset
</UL>

<P><STRONG><a name="[9c]"></a>M8266HostIf_delay_us</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, m8266hostif_stm32xx.o(i.M8266HostIf_delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalWaitUs
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Wait_SPI_sfad
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsscrhd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsscbhud
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wspss
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wspsr
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsbsbs1
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_dlodc
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap_Old
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Interface_Communication_OK
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Select
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_delay_ms
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_Opmode
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
</UL>

<P><STRONG><a name="[a0]"></a>M8266WIFI_Module_Hardware_Reset</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, m8266wifi_ops.o(i.M8266WIFI_Module_Hardware_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M8266WIFI_Module_Hardware_Reset &rArr; M8266WIFI_Module_delay_ms &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_delay_ms
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Set_nRESET_Pin
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Set_SPI_nCS_Pin
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_Init_Via_SPI
</UL>

<P><STRONG><a name="[a4]"></a>M8266WIFI_Module_Init_Via_SPI</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, m8266wifi_ops.o(i.M8266WIFI_Module_Init_Via_SPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = M8266WIFI_Module_Init_Via_SPI &rArr; M8266HostIf_SPI_Select &rArr; M8266WIFI_SPI_ssmd &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Interface_Communication_OK
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Select
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_delay_ms
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_SetSpeed
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_Hardware_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
</UL>

<P><STRONG><a name="[a2]"></a>M8266WIFI_Module_delay_ms</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, m8266wifi_ops.o(i.M8266WIFI_Module_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = M8266WIFI_Module_delay_ms &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_Init_Via_SPI
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_Hardware_Reset
</UL>

<P><STRONG><a name="[a6]"></a>M8266WIFI_SPI_Config_STA_Param</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Config_STA_Param))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = M8266WIFI_SPI_Config_STA_Param &rArr; M8266WIFI_SPI_capstp &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_capstp
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap
</UL>

<P><STRONG><a name="[a8]"></a>M8266WIFI_SPI_Delete_Connection</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Delete_Connection))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = M8266WIFI_SPI_Delete_Connection &rArr; M8266WIFI_SPI_dlodc &rArr; M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_dlodc
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketRelease
</UL>

<P><STRONG><a name="[9d]"></a>M8266WIFI_SPI_Get_Module_Info</STRONG> (Thumb, 170 bytes, Stack size 64 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Get_Module_Info))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = M8266WIFI_SPI_Get_Module_Info &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Select
</UL>

<P><STRONG><a name="[af]"></a>M8266WIFI_SPI_Get_STA_Connection_Status</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Get_STA_Connection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = M8266WIFI_SPI_Get_STA_Connection_Status &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap_Old
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectStatus
</UL>

<P><STRONG><a name="[b0]"></a>M8266WIFI_SPI_Get_STA_IP_Addr</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Get_STA_IP_Addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = M8266WIFI_SPI_Get_STA_IP_Addr &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetIPAddress
</UL>

<P><STRONG><a name="[b1]"></a>M8266WIFI_SPI_Has_DataReceived</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Has_DataReceived))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = M8266WIFI_SPI_Has_DataReceived &rArr; M8266WIFI_SPI_ssa
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsscrhd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msocketDataRecv
</UL>

<P><STRONG><a name="[a5]"></a>M8266WIFI_SPI_Interface_Communication_OK</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Interface_Communication_OK))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = M8266WIFI_SPI_Interface_Communication_OK &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rra
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_Init_Via_SPI
</UL>

<P><STRONG><a name="[b4]"></a>M8266WIFI_SPI_Query_Connection</STRONG> (Thumb, 230 bytes, Stack size 72 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Query_Connection))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = M8266WIFI_SPI_Query_Connection &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_dlodc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
</UL>

<P><STRONG><a name="[b5]"></a>M8266WIFI_SPI_Recv</STRONG> (Thumb, 522 bytes, Stack size 88 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = M8266WIFI_SPI_Recv &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvcp
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsscrhd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsscbhud
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wspsr
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sbis
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rrud
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rru
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Status_Start_To_Rxd_Has_Been_Cleared
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_RecvData_ex
</UL>

<P><STRONG><a name="[bd]"></a>M8266WIFI_SPI_RecvData_ex</STRONG> (Thumb, 28 bytes, Stack size 48 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_RecvData_ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = M8266WIFI_SPI_RecvData_ex &rArr; M8266WIFI_SPI_Recv &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msocketDataRecv
</UL>

<P><STRONG><a name="[be]"></a>M8266WIFI_SPI_STA_Connect_Ap</STRONG> (Thumb, 436 bytes, Stack size 40 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_STA_Connect_Ap))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = M8266WIFI_SPI_STA_Connect_Ap &rArr; M8266WIFI_SPI_STA_Connect_Ap_Old &rArr; M8266WIFI_SPI_Get_STA_Connection_Status &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvcp
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap_Old
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Config_STA_Param
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_Connection_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiJoinAp
</UL>

<P><STRONG><a name="[bf]"></a>M8266WIFI_SPI_STA_Connect_Ap_Old</STRONG> (Thumb, 386 bytes, Stack size 72 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_STA_Connect_Ap_Old))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = M8266WIFI_SPI_STA_Connect_Ap_Old &rArr; M8266WIFI_SPI_Get_STA_Connection_Status &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_Connection_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap
</UL>

<P><STRONG><a name="[c0]"></a>M8266WIFI_SPI_Send_Data</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = M8266WIFI_SPI_Send_Data &rArr; M8266WIFI_SPI_sdfal &rArr; SPI_STA_Get_HostIP_by_HostName &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketDataSend
</UL>

<P><STRONG><a name="[c2]"></a>M8266WIFI_SPI_Send_Udp_Data</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Send_Udp_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = M8266WIFI_SPI_Send_Udp_Data &rArr; M8266WIFI_SPI_sdfal &rArr; SPI_STA_Get_HostIP_by_HostName &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvdnstap
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketUdpDataSend
</UL>

<P><STRONG><a name="[c4]"></a>M8266WIFI_SPI_Set_Opmode</STRONG> (Thumb, 142 bytes, Stack size 56 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Set_Opmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = M8266WIFI_SPI_Set_Opmode &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
</UL>

<P><STRONG><a name="[c5]"></a>M8266WIFI_SPI_Set_TcpServer_Auto_Discon_Timeout</STRONG> (Thumb, 142 bytes, Stack size 56 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Set_TcpServer_Auto_Discon_Timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = M8266WIFI_SPI_Set_TcpServer_Auto_Discon_Timeout &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketCreate
</UL>

<P><STRONG><a name="[c6]"></a>M8266WIFI_SPI_Setup_Connection</STRONG> (Thumb, 512 bytes, Stack size 104 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Setup_Connection))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = M8266WIFI_SPI_Setup_Connection &rArr; M8266WIFI_SPI_Delete_Connection &rArr; M8266WIFI_SPI_dlodc &rArr; M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvdnstap
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvcp
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_STA_Get_HostIP_by_HostName
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Query_Connection
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Delete_Connection
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketCreate
</UL>

<P><STRONG><a name="[c8]"></a>M8266WIFI_SPI_Slave_Has_Response</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Slave_Has_Response))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = M8266WIFI_SPI_Slave_Has_Response &rArr; M8266WIFI_SPI_ssa
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscr
</UL>

<P><STRONG><a name="[bc]"></a>M8266WIFI_SPI_Status_Start_To_Rxd_Has_Been_Cleared</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_Status_Start_To_Rxd_Has_Been_Cleared))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = M8266WIFI_SPI_Status_Start_To_Rxd_Has_Been_Cleared &rArr; M8266WIFI_SPI_ssa
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsscbhud
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
</UL>

<P><STRONG><a name="[c9]"></a>M8266WIFI_SPI_TxdBuffer_Free</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_TxdBuffer_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = M8266WIFI_SPI_TxdBuffer_Free &rArr; M8266WIFI_SPI_ssa
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
</UL>

<P><STRONG><a name="[a7]"></a>M8266WIFI_SPI_capstp</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_capstp))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = M8266WIFI_SPI_capstp &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvdnstap
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Config_STA_Param
</UL>

<P><STRONG><a name="[ac]"></a>M8266WIFI_SPI_csb</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_csb))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M8266WIFI_SPI_csb &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rra
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_STA_Get_HostIP_by_HostName
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_qacal
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_dlodc
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_capstp
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap_Old
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_Module_Info
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_Opmode
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_IP_Addr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_Connection_Status
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_TcpServer_Auto_Discon_Timeout
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Query_Connection
</UL>

<P><STRONG><a name="[a9]"></a>M8266WIFI_SPI_dlodc</STRONG> (Thumb, 360 bytes, Stack size 88 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_dlodc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = M8266WIFI_SPI_dlodc &rArr; M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_qacal
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Query_Connection
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Delete_Connection
</UL>

<P><STRONG><a name="[ca]"></a>M8266WIFI_SPI_qacal</STRONG> (Thumb, 238 bytes, Stack size 72 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_qacal))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_dlodc
</UL>

<P><STRONG><a name="[b3]"></a>M8266WIFI_SPI_rra</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_rra))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = M8266WIFI_SPI_rra
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_wrs
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_rrs
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Set_SPI_nCS_Pin
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wspss
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wspsr
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Interface_Communication_OK
</UL>

<P><STRONG><a name="[ba]"></a>M8266WIFI_SPI_rru</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_rru))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = M8266WIFI_SPI_rru
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_wrs
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_rrs
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Set_SPI_nCS_Pin
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
</UL>

<P><STRONG><a name="[b9]"></a>M8266WIFI_SPI_rrud</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_rrud))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = M8266WIFI_SPI_rrud &rArr; M8266HostIf_SPI_DMA_StartReceiveSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_DMA_StartReceiveSendData
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Set_SPI_nCS_Pin
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
</UL>

<P><STRONG><a name="[bb]"></a>M8266WIFI_SPI_sbis</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_sbis))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = M8266WIFI_SPI_sbis &rArr; M8266WIFI_SPI_ssa
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
</UL>

<P><STRONG><a name="[c1]"></a>M8266WIFI_SPI_sdfal</STRONG> (Thumb, 558 bytes, Stack size 104 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_sdfal))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = M8266WIFI_SPI_sdfal &rArr; SPI_STA_Get_HostIP_by_HostName &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvcp
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_STA_Get_HostIP_by_HostName
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Wait_SPI_sfad
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wspss
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsbsbs1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssut
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssud
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Send_Udp_Data
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Send_Data
</UL>

<P><STRONG><a name="[ae]"></a>M8266WIFI_SPI_srh</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_srh))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvdnstap
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Wait_SPI_sfad
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscr
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssu
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rru
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_STA_Get_HostIP_by_HostName
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssmd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_qacal
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_dlodc
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_capstp
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap_Old
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_Module_Info
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_Opmode
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_IP_Addr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_Connection_Status
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_TcpServer_Auto_Discon_Timeout
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Query_Connection
</UL>

<P><STRONG><a name="[b2]"></a>M8266WIFI_SPI_ssa</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_ssa))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = M8266WIFI_SPI_ssa
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_wrs
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_rrs
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Set_SPI_nCS_Pin
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvdnstap
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_STA_Get_HostIP_by_HostName
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Wait_SPI_sfad
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsscrhd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsscbhud
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wspss
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wspsr
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wsbsbs1
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_tufs
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sbis
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_qacal
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_dlodc
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_capstp
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_TxdBuffer_Free
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Status_Start_To_Rxd_Has_Been_Cleared
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Slave_Has_Response
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap_Old
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Interface_Communication_OK
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_TcpServer_Auto_Discon_Timeout
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Has_DataReceived
</UL>

<P><STRONG><a name="[ad]"></a>M8266WIFI_SPI_ssb</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_ssb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = M8266WIFI_SPI_ssb &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rra
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_STA_Get_HostIP_by_HostName
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssmd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_qacal
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_dlodc
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_capstp
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap_Old
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_Module_Info
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_Opmode
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_IP_Addr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_Connection_Status
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_TcpServer_Auto_Discon_Timeout
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Query_Connection
</UL>

<P><STRONG><a name="[9b]"></a>M8266WIFI_SPI_ssmd</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_ssmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = M8266WIFI_SPI_ssmd &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Select
</UL>

<P><STRONG><a name="[d3]"></a>M8266WIFI_SPI_ssu</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_ssu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = M8266WIFI_SPI_ssu
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_rrs
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Set_SPI_nCS_Pin
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
</UL>

<P><STRONG><a name="[cf]"></a>M8266WIFI_SPI_ssud</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_ssud))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = M8266WIFI_SPI_ssud &rArr; M8266HostIf_SPI_DMA_StartReceiveSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_DMA_StartReceiveSendData
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Set_SPI_nCS_Pin
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
</UL>

<P><STRONG><a name="[d0]"></a>M8266WIFI_SPI_ssut</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_ssut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = M8266WIFI_SPI_ssut
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_rrs
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Set_SPI_nCS_Pin
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
</UL>

<P><STRONG><a name="[d5]"></a>M8266WIFI_SPI_tufs</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_tufs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = M8266WIFI_SPI_tufs &rArr; M8266WIFI_SPI_ssa
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Wait_SPI_sfad
</UL>

<P><STRONG><a name="[d2]"></a>M8266WIFI_SPI_wsbsbs1</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_wsbsbs1))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M8266WIFI_SPI_wsbsbs1 &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
</UL>

<P><STRONG><a name="[ab]"></a>M8266WIFI_SPI_wscbf</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_wscbf))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M8266WIFI_SPI_wscbf &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_TxdBuffer_Free
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_STA_Get_HostIP_by_HostName
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssmd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_qacal
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_dlodc
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_capstp
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap_Old
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_Module_Info
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_Opmode
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_IP_Addr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_Connection_Status
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_TcpServer_Auto_Discon_Timeout
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Query_Connection
</UL>

<P><STRONG><a name="[d4]"></a>M8266WIFI_SPI_wscr</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_wscr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M8266WIFI_SPI_wscr &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Slave_Has_Response
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
</UL>

<P><STRONG><a name="[b7]"></a>M8266WIFI_SPI_wspsr</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_wspsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M8266WIFI_SPI_wspsr &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rra
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
</UL>

<P><STRONG><a name="[ce]"></a>M8266WIFI_SPI_wspss</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_wspss))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M8266WIFI_SPI_wspss &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_rra
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
</UL>

<P><STRONG><a name="[b8]"></a>M8266WIFI_SPI_wsscbhud</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_wsscbhud))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = M8266WIFI_SPI_wsscbhud &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Status_Start_To_Rxd_Has_Been_Cleared
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
</UL>

<P><STRONG><a name="[b6]"></a>M8266WIFI_SPI_wsscrhd</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, m8266wifidrv.o(i.M8266WIFI_SPI_wsscrhd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = M8266WIFI_SPI_wsscrhd &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Has_DataReceived
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
</UL>

<P><STRONG><a name="[d1]"></a>M8266WIFI_Wait_SPI_sfad</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, m8266wifidrv.o(i.M8266WIFI_Wait_SPI_sfad))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_tufs
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
</UL>

<P><STRONG><a name="[d6]"></a>MSocketCreate</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, msocket.o(i.MSocketCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = MSocketCreate &rArr; M8266WIFI_SPI_Setup_Connection &rArr; M8266WIFI_SPI_Delete_Connection &rArr; M8266WIFI_SPI_dlodc &rArr; M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_TcpServer_Auto_Discon_Timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoTcpServerPoll
</UL>

<P><STRONG><a name="[d7]"></a>MSocketDataSend</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, msocket.o(i.MSocketDataSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = MSocketDataSend &rArr; M8266WIFI_SPI_Send_Data &rArr; M8266WIFI_SPI_sdfal &rArr; SPI_STA_Get_HostIP_by_HostName &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoTcpDataRecvHandle
</UL>

<P><STRONG><a name="[d8]"></a>MSocketInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, msocket.o(i.MSocketInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MSocketInit
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitialize
</UL>

<P><STRONG><a name="[d9]"></a>MSocketPoll</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, msocket.o(i.MSocketPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = MSocketPoll &rArr; msocketDataRecv &rArr; M8266WIFI_SPI_RecvData_ex &rArr; M8266WIFI_SPI_Recv &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msocketDataRecv
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPoll
</UL>

<P><STRONG><a name="[db]"></a>MSocketRelease</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, msocket.o(i.MSocketRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = MSocketRelease &rArr; M8266WIFI_SPI_Delete_Connection &rArr; M8266WIFI_SPI_dlodc &rArr; M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Delete_Connection
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoTcpServerPoll
</UL>

<P><STRONG><a name="[dc]"></a>MSocketUdpDataSend</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, msocket.o(i.MSocketUdpDataSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MSocketUdpDataSend &rArr; M8266WIFI_SPI_Send_Udp_Data &rArr; M8266WIFI_SPI_sdfal &rArr; SPI_STA_Get_HostIP_by_HostName &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Send_Udp_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoUdpDataRecvHandle
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartInitialize
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halExtiInit
</UL>

<P><STRONG><a name="[81]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartInitialize
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Init
</UL>

<P><STRONG><a name="[dd]"></a>PS2Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ps2.o(i.PS2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PS2Init &rArr; ps2RecvModeSet &rArr; halExtiInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOConfig
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps2RecvModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitialize
</UL>

<P><STRONG><a name="[df]"></a>PS2Poll</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ps2.o(i.PS2Poll))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PS2Poll &rArr; keyValueHandle &rArr; usbKeyHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyValueHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPoll
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halClkInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_GPIO_CS_RESET_Init
</UL>

<P><STRONG><a name="[f5]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halClkInit
</UL>

<P><STRONG><a name="[96]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halClkInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Init
</UL>

<P><STRONG><a name="[97]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Init
</UL>

<P><STRONG><a name="[eb]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[99]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_SetSpeed
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Init
</UL>

<P><STRONG><a name="[98]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Init
</UL>

<P><STRONG><a name="[c7]"></a>SPI_STA_Get_HostIP_by_HostName</STRONG> (Thumb, 364 bytes, Stack size 80 bytes, m8266wifidrv.o(i.SPI_STA_Get_HostIP_by_HostName))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SPI_STA_Get_HostIP_by_HostName &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvdnstap
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_wscbf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_csb
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[f7]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f4xx_syscfg.o(i.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halExtiInit
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>SystemInitialize</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, system.o(i.SystemInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SystemInitialize &rArr; DemoInit &rArr; WifiJoinAp &rArr; M8266WIFI_SPI_STA_Connect_Ap &rArr; M8266WIFI_SPI_STA_Connect_Ap_Old &rArr; M8266WIFI_SPI_Get_STA_Connection_Status &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalReboot
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInit
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>SystemPoll</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, system.o(i.SystemPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = SystemPoll &rArr; DemoPoll &rArr; demoTcpServerPoll &rArr; MSocketCreate &rArr; M8266WIFI_SPI_Setup_Connection &rArr; M8266WIFI_SPI_Delete_Connection &rArr; M8266WIFI_SPI_dlodc &rArr; M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalPoll
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiPoll
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2Poll
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketPoll
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoPoll
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, haltimer.o(i.TIM1_UP_TIM10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM1_UP_TIM10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerPast1ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalWaitUs
</UL>

<P><STRONG><a name="[83]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalWaitUs
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM10_IRQHandler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
</UL>

<P><STRONG><a name="[85]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalWaitUs
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
</UL>

<P><STRONG><a name="[e7]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM10_IRQHandler
</UL>

<P><STRONG><a name="[84]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
</UL>

<P><STRONG><a name="[80]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalWaitUs
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
</UL>

<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, haluart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, haluart.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartConfig
</UL>

<P><STRONG><a name="[88]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartConfig
</UL>

<P><STRONG><a name="[8f]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartWrite
</UL>

<P><STRONG><a name="[e9]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[89]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartConfig
</UL>

<P><STRONG><a name="[8a]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartConfig
</UL>

<P><STRONG><a name="[ea]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartWrite
</UL>

<P><STRONG><a name="[87]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartConfig
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[ec]"></a>WifiConnectStatus</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wifi.o(i.WifiConnectStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WifiConnectStatus &rArr; M8266WIFI_SPI_Get_STA_Connection_Status &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_Connection_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoWifiStatusPoll
</UL>

<P><STRONG><a name="[ed]"></a>WifiGetIPAddress</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wifi.o(i.WifiGetIPAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WifiGetIPAddress &rArr; M8266WIFI_SPI_Get_STA_IP_Addr &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Get_STA_IP_Addr
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoUdpDataRecvHandle
</UL>

<P><STRONG><a name="[e3]"></a>WifiInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, wifi.o(i.WifiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WifiInit &rArr; M8266WIFI_Module_Init_Via_SPI &rArr; M8266HostIf_SPI_Select &rArr; M8266WIFI_SPI_ssmd &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Set_Opmode
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_Module_Init_Via_SPI
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitialize
</UL>

<P><STRONG><a name="[6d]"></a>WifiJoinAp</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wifi.o(i.WifiJoinAp))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WifiJoinAp &rArr; M8266WIFI_SPI_STA_Connect_Ap &rArr; M8266WIFI_SPI_STA_Connect_Ap_Old &rArr; M8266WIFI_SPI_Get_STA_Connection_Status &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoInit
</UL>

<P><STRONG><a name="[e6]"></a>WifiPoll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wifi.o(i.WifiPoll))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPoll
</UL>

<P><STRONG><a name="[ee]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10b]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[7f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalReboot
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoWifiStatusPoll
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoUdpDataRecvHandle
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoTcpServerPoll
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;demoTcpDataRecvHandle
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbKeyHandle
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyValueHandle
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitialize
</UL>

<P><STRONG><a name="[f0]"></a>__0sprintf$8</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10c]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[fc]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msocketDataRecv
</UL>

<P><STRONG><a name="[10d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[10e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[10f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[fd]"></a>check</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ps2.o(i.check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = check
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps2BitRecv
</UL>

<P><STRONG><a name="[5f]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, hal.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fputc &rArr; HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[9e]"></a>fvcp</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, m8266wifidrv.o(i.fvcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fvcp
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvdnstap
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_sdfal
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Recv
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266HostIf_SPI_Select
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_STA_Connect_Ap
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
</UL>

<P><STRONG><a name="[c3]"></a>fvdnstap</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, m8266wifidrv.o(i.fvdnstap))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fvdnstap &rArr; fvcp
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fvcp
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_ssa
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_STA_Get_HostIP_by_HostName
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_srh
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_capstp
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Setup_Connection
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Send_Udp_Data
</UL>

<P><STRONG><a name="[5c]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = main &rArr; SystemPoll &rArr; DemoPoll &rArr; demoTcpServerPoll &rArr; MSocketCreate &rArr; M8266WIFI_SPI_Setup_Connection &rArr; M8266WIFI_SPI_Delete_Connection &rArr; M8266WIFI_SPI_dlodc &rArr; M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPoll
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[79]"></a>halClkInit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, hal.o(i.halClkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = halClkInit
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInit
</UL>

<P><STRONG><a name="[7d]"></a>logPrintInit</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, hal.o(i.logPrintInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = logPrintInit &rArr; HalUartConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInit
</UL>

<P><STRONG><a name="[75]"></a>ioToPin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, halgpio.o(i.ioToPin))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOConfig
</UL>

<P><STRONG><a name="[76]"></a>ioToPort</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, halgpio.o(i.ioToPort))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOConfig
</UL>

<P><STRONG><a name="[e1]"></a>SetSysClock</STRONG> (Thumb, 220 bytes, Stack size 12 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[f6]"></a>halExtiInit</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ps2.o(i.halExtiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = halExtiInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps2RecvModeSet
</UL>

<P><STRONG><a name="[e0]"></a>keyValueHandle</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, ps2.o(i.keyValueHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = keyValueHandle &rArr; usbKeyHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbKeyHandle
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps2Key2Usbkey
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps2CtrlKey2UsbBitnum
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2Poll
</UL>

<P><STRONG><a name="[72]"></a>ps2BitRecv</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, ps2.o(i.ps2BitRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ps2BitRecv &rArr; check
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerCount
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[f9]"></a>ps2CtrlKey2UsbBitnum</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ps2.o(i.ps2CtrlKey2UsbBitnum))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyValueHandle
</UL>

<P><STRONG><a name="[fa]"></a>ps2Key2Usbkey</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ps2.o(i.ps2Key2Usbkey))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyValueHandle
</UL>

<P><STRONG><a name="[de]"></a>ps2RecvModeSet</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ps2.o(i.ps2RecvModeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ps2RecvModeSet &rArr; halExtiInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halExtiInit
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2Init
</UL>

<P><STRONG><a name="[fe]"></a>updateUsbKey</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, ps2.o(i.updateUsbKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = updateUsbKey
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbKeyHandle
</UL>

<P><STRONG><a name="[fb]"></a>usbKeyHandle</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, ps2.o(i.usbKeyHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usbKeyHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateUsbKey
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyValueHandle
</UL>

<P><STRONG><a name="[61]"></a>demoTcpDataRecvHandle</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, demo.o(i.demoTcpDataRecvHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = demoTcpDataRecvHandle &rArr; MSocketDataSend &rArr; M8266WIFI_SPI_Send_Data &rArr; M8266WIFI_SPI_sdfal &rArr; SPI_STA_Get_HostIP_by_HostName &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketDataSend
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demo.o(i.demoTcpServerPoll)
</UL>
<P><STRONG><a name="[6f]"></a>demoTcpServerPoll</STRONG> (Thumb, 266 bytes, Stack size 8 bytes, demo.o(i.demoTcpServerPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = demoTcpServerPoll &rArr; MSocketCreate &rArr; M8266WIFI_SPI_Setup_Connection &rArr; M8266WIFI_SPI_Delete_Connection &rArr; M8266WIFI_SPI_dlodc &rArr; M8266WIFI_SPI_qacal &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerCount
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketRelease
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketCreate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoPoll
</UL>

<P><STRONG><a name="[62]"></a>demoUdpDataRecvHandle</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, demo.o(i.demoUdpDataRecvHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = demoUdpDataRecvHandle &rArr; MSocketUdpDataSend &rArr; M8266WIFI_SPI_Send_Udp_Data &rArr; M8266WIFI_SPI_sdfal &rArr; SPI_STA_Get_HostIP_by_HostName &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetIPAddress
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketUdpDataSend
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demo.o(i.demoTcpServerPoll)
</UL>
<P><STRONG><a name="[70]"></a>demoWifiStatusPoll</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, demo.o(i.demoWifiStatusPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = demoWifiStatusPoll &rArr; WifiConnectStatus &rArr; M8266WIFI_SPI_Get_STA_Connection_Status &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerCount
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectStatus
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoPoll
</UL>

<P><STRONG><a name="[da]"></a>msocketDataRecv</STRONG> (Thumb, 146 bytes, Stack size 64 bytes, msocket.o(i.msocketDataRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = msocketDataRecv &rArr; M8266WIFI_SPI_RecvData_ex &rArr; M8266WIFI_SPI_Recv &rArr; M8266WIFI_SPI_srh &rArr; M8266WIFI_Wait_SPI_sfad &rArr; M8266HostIf_delay_us &rArr; HalWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_RecvData_ex
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M8266WIFI_SPI_Has_DataReceived
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSocketPoll
</UL>

<P><STRONG><a name="[ef]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[f2]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[f1]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[60]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
